name: Push

on:
  push:
    branches:
      # - main
      - demo_server_deploy_db
  release:
    types:
      - created
  workflow_dispatch:
    inputs:
      publish:
        description: 'Build and publish Docker image'
        type: boolean
        required: false
        default: false
      deploy:
        description: 'Deploy to demo server'
        type: boolean
        required: false
        default: false

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'push' }}
    steps:
      - name: Check out
        uses: actions/checkout@v3
      - name: Use Node.js 18.x
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: yarn
      - name: Install
        run: yarn --immutable
      - name: Build collaboration server
        run: yarn build
        working-directory: packages/apollo-collaboration-server
      - name: Build plugin
        run: yarn build
        working-directory: packages/jbrowse-plugin-apollo
  lint:
    name: Lint
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'push' }}
    steps:
      - name: Check out
        uses: actions/checkout@v3
      - name: Use Node.js 18.x
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: yarn
      - name: Install
        run: yarn --immutable
        # Have to build shared before linting so type-based lint rules can
        # run correctly
      - name: Build shared
        run: yarn build
        working-directory: packages/apollo-shared
      - name: Lint codebase
        run: yarn eslint --ext .js,.ts,.jsx,.tsx .
  build-and-push-docker:
    name: Build and push Docker image
    runs-on: ubuntu-latest
    #if:
    #  ${{ (github.event_name == 'push' && github.ref == 'refs/heads/main') ||
    #  inputs.publish }}
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Log in to the GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push Apollo collaboration server image
        uses: docker/build-push-action@v5
        with:
          platforms: linux/arm64/v8,linux/amd64
          push: true
          tags: ghcr.io/gmod/apollo-collaboration-server:development
          outputs:
            type=image,annotation-index.org.opencontainers.image.description=Apollo
            collaboration server
          cache-from: type=registry,ref=user/app:latest
          cache-to: type=inline
  # deploy-staging:
  #   name: Deploy to staging server
  #   if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
  #   uses: ./.github/workflows/deploy.yml
  #   with:
  #     environment: 'staging'
  #   secrets: inherit
  deploy-demo:
    name: Deploy to demo server
    # if: ${{ github.event_name == 'release' }}
    uses: ./.github/workflows/deploy_demo.yml
    needs: build-and-push-docker
    with:
      environment: 'prod'
    secrets: inherit
