##############
## REQUIRED ##
##############

# URL
# URL=http://my-apollo-site.org

# MongoDB connection
# MONGODB_URI=mongodb://127.0.0.1:27017/apolloDb
# Alternatively, can be a path to a file with the URI
# MONGODB_URI_FILE=/run/secrets/mongodb-uri

# Output folder for uploaded files
# FILE_UPLOAD_FOLDER=./data/uploads

# Secret used to encode JWT tokens
# JWT_SECRET=<secret-value>
# Alternatively, can be a path to a file with the client secret
# JWT_SECRET_FILE=/run/secrets/jwt-secret

# Secret used to encode express sessions
# SESSION_SECRET=<secret-value>
# Alternatively, can be a path to a file with the session secret
# SESSION_SECRET_FILE=/run/secrets/session-secret

##############################################################################
## To enable users to log in, you need either (or both) Google or Microsoft ##
## OAuth configured. Without them, only userless guest access is possible.  ##
##############################################################################

# Google client id and secret.
# GOOGLE_CLIENT_ID=
# Alternatively, can be a path to a file with the client ID
# GOOGLE_CLIENT_ID_FILE=/run/secrets/google-client-id
# GOOGLE_CLIENT_SECRET=
# Alternatively, can be a path to a file with the client secret
# GOOGLE_CLIENT_SECRET_FILE=/run/secrets/google-client-secret

# Microsoft client id and secret.
# MICROSOFT_CLIENT_ID=
# Alternatively, can be a path to a file with the client ID
# MICROSOFT_CLIENT_ID_FILE=/run/secrets/microsoft-client-id
# MICROSOFT_CLIENT_SECRET=
# Alternatively, can be a path to a file with the client secret
# MICROSOFT_CLIENT_SECRET_FILE=/run/secrets/microsoft-client-secret

##############
## OPTIONAL ##
##############

# Application port, defaults to 3999
# PORT=3999

# Enable all CORS requests, defaults to false
# CORS=false

# Comma-separated list of log levels to output
# Possible values are: error, warn, log, debug, verbose.
# Defaults to error,warn,log
# LOG_LEVELS=error,warn,log

# Reference sequence chunk size, defaults to 262144 (256 KiB)
# CHUNK_SIZE=262144

# Default new user role, possible values are admin, user, readOnly, and none
# Defaults to none
# DEFAULT_NEW_USER_ROLE=none

# Whether to broadcast users locations, defaults to true
# BROADCAST_USER_LOCATION=true

# Whether to allow guest users who do not have to log in, defaults to false
ALLOW_GUEST_USER=true
# If guest users are allowed, what role will they have
# Possible values are admin, readOnly and user; defaults to readonly
# GUEST_USER_ROLE=readOnly

# Whether to allow a root user. Root users cannot log in to the user interface,
# but can be used in the Apollo CLI as an account that can log in without
# needing an identity provider (such as Google). Defaults to false.
# ALLOW_ROOT_USER=false
# The username for the root user, if allowed
# ROOT_USER_NAME=root
# The password for the root user, if allowed
# ROOT_USER_PASSWORD=
# Alternatively, can be a path to a file with the root password
# ROOT_USER_PASSWORD_FILE=/run/secrets/root-user-password

# Apollo by default uses The Sequence Ontology. You can override this by
# providing a path to an ontology file in the OBO Graphs JSON format. You can
# use `robot` to convert an OBO or OWL to OBO Graphs JSON.
# http://robot.obolibrary.org/convert
# ONTOLOGY_FILE = '/data/ontology.json'

# Comma-separated list of Apollo plugins to use
# PLUGIN_URLS=https://example.com/apollo-plugin-example.umd.production.min.js
# Alternatively, can be a path to a file with a list of plugin URLs, one URL per
# line
# PLUGIN_URLS_FILE=/data/plugin-urls
